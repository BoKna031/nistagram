version: '3.9'
services:

    db_relational:
        container_name: db_mysql
        image: mysql
        restart: always
        environment: 
            MYSQL_ROOT_PASSWORD: root
        networks: 
            - net_db_relational
        ports:
            - 3306:3306 #dev
        volumes: 
            - type: volume
              source: data_profile
              target: /var/lib/mysql
            - "./conf/dev/mysql:/docker-entrypoint-initdb.d"

#    cache_rbac_:
#        container_name: cache_redis1
#        image: redis
#        restart: always
#        networks: 
#            - net_
#        ports: 
#            - 6379:6379
#        volumes: 
#            - ./conf/redis.conf:/usr/local/etc/redis/redis.conf
#        command: redis-server /usr/local/etc/redis/redis.conf

    graphdb_connection:
        container_name: graphdb_neo4j
        image: neo4j
        restart: always
        environment: 
            - NEO4J_dbms_connector_bolt_advertised__address=0.0.0.0:7687
            - NEO4J_dbms_connector_bolt_listen__address=0.0.0.0:7687
            - NEO4J_AUTH=neo4j/root
        networks: 
            - net_db_graph
        ports: 
            - 7474:7474
            - 7687:7687 # mora jer je neki mozak pravio da se komunikacija sa bazom radi kompletno iz fronta web aplikacije
        volumes: 
            - type: volume
              source: data_connection
              target: /data

    mongo1:
        container_name: nosqldb_mongo1
        image: mongo
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: root
        networks: 
            - net_mongo
        ports:
            - 8084:27017
        volumes: 
            - type: volume
              source: data3
              target: /data/db

    exist: 
        image: existdb/existdb:release
        container_name: exist-db
        restart: always
        ports:
            - 8666:8080
        volumes:
            - type: volume
              source: data_exist
              target: /exist-data
        networks: 
            - net_exist

    mongo-express:
        image: mongo-express
        restart: always
        ports:
            - 8082:8081
        environment:
            ME_CONFIG_MONGODB_SERVER: mongo1
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: root
        networks: 
            - net_mongo

    adminer:
        image: adminer
        restart: always
        networks: 
            - net_db_relational
        ports:
            - 8080:8080

    #    redis-commander:
    #        container_name: redis-commander
    #        image: rediscommander/redis-commander
    #        restart: always
    #        environment:
    #            - REDIS_HOST=cache_rbac_
    #            - REDIS_PORT=6379
    #            - REDIS_PASSWORD=helloworld
    #        ports:
    #            - 8081:8081
    #        networks: 
    #            - net_
    #        depends_on: 
    #            - cache_rbac_


    message_broker:
        container_name: redis
        image: redis
        restart: always
        ports:
            - 6379:6379
        volumes:
            - ./conf/redis.conf:/usr/local/etc/redis/redis.conf
        command:  redis-server /usr/local/etc/redis/redis.conf

networks: 
    net_db_relational:
    net_db_graph:
    net_mongo:
    net_exist:

volumes: 
    data_profile:
    data_auth:
    data_connection:
    data3:
    data_exist: