version: '3.9'
services:

    apigateway:
        container_name: apigateway_krakend
        image: devopsfaith/krakend
        restart: always
        networks: 
            - net_apigateway
        volumes: 
            - ./conf/krakend.json:/etc/krakend/krakend.json
        ports: 
            - 81:80

    static:
        container_name: static_srv_nginx
        image: nginx
        restart: always
        networks: 
            - net_apigateway
        volumes: 
            - "../nistagramstaticdata/prod:/usr/share/nginx/html:ro"

    profile:
        container_name: profile_ms
        restart: always
        environment: 
            DB_USERNAME: ${DB_PROFILE_USERNAME}
            DB_PASSWORD: ${DB_PROFILE_PASSWORD}
            DOCKER_ENV_SET_PROD: ""
        build:
            context: .
            dockerfile: Build.dockerfile
            args: 
                TARGET_MS_GO: profile
        networks: 
            - net_apigateway
            - net_profile
        depends_on: 
            - db_profile

    db_profile:
        container_name: db_mysql_profile
        image: mysql
        restart: always
        environment: 
            MYSQL_ROOT_PASSWORD: ${DB_PROFILE_USERNAME}
            MYSQL_DATABASE: profile
        networks: 
            - net_profile
        volumes: 
            - type: volume
              source: data_profile
              target: /var/lib/mysql
        cap_add:
            - SYS_NICE  # CAP_SYS_NICE

    db_auth:
        container_name: db_mysql_auth
        image: mysql
        restart: always
        environment: 
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: auth
        networks: 
            - net_auth
        volumes: 
            - type: volume
              source: data_auth
              target: /var/lib/mysql

    cache_rbac_:
        container_name: cache_redis1
        image: redis
        restart: always
        networks: 
            - net_
        volumes: 
            - ./conf/redis.conf:/usr/local/etc/redis/redis.conf
        command: redis-server /usr/local/etc/redis/redis.conf

    graphdb_connection:
        container_name: graphdb_neo4j
        image: neo4j
        restart: always
        environment: 
            - NEO4J_dbms_connector_bolt_advertised__address=0.0.0.0:7687
            - NEO4J_dbms_connector_bolt_listen__address=0.0.0.0:7687
            - NEO4J_AUTH=none
        networks: 
            - net_connection
        volumes: 
            - type: volume
              source: data_connection
              target: /data

    mongo1:
        container_name: nosqldb_mongo1
        image: mongo
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: root
        networks: 
            - net4
        volumes: 
            - type: volume
              source: data3
              target: /data/db


networks: 
    net_apigateway:
    net_profile:
    net_auth:
    net_connection:
    net4:
    net_:

volumes: 
    data_profile:
    data_auth:
    data_connection:
    data3: